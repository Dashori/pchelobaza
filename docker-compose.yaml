version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: web-postgres
    ports: 
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./data/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U dashori"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
        - .env
    networks:
      - mynetwork

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-backend
    command: go run cmd/main.go
    ports: 
      - ${BACKEND_PORT}:${BACKEND_PORT}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - mynetwork
  
  backend-ro-1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-backend-ro-1
    command: go run cmd/main.go
    ports: 
      - ${BACKEND_PORT_RO_1}:${BACKEND_PORT}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy 
      backend:
        condition: service_started
    networks:
      - mynetwork

  backend-ro-2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-backend-ro-2
    command: go run cmd/main.go
    ports: 
      - ${BACKEND_PORT_RO_2}:${BACKEND_PORT}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy 
      backend:
        condition: service_started
      backend-ro-1:
        condition: service_started
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4:7
    container_name: web-pgadmin
    env_file:
      - .env
    ports: 
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - mynetwork

  nginx:
    image: nginx:1.24
    container_name: web-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/static:/static
      - ./api.yaml:/static/api.yaml
      - ./images:/static/images
    ports:
      - ${NGINX_EXTERNAL_PORT}:${NGINX_PORT}
    depends_on:
      - backend
      - pgadmin
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
