version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: web-postgres
    ports: 
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./data/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U dashori"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
        - .env
    networks:
      - mynetwork

  # postgres-slave:
  #   image: postgres:16
  #   container_name: web-postgres-slave
  #   environment:
  #     POSTGRES_PORT_SLAVE: 5433
  #     POSTGRES_PORT: 5432
  #     POSTGRES_USER: "dashori"
  #     POSTGRES_PASSWORD: "password"
  #     POSTGRES_DB: "postgres"
  #     POSTGRES_MASTER_SERVICE_HOST: postgres
  #     POSTGRES_REPLICATION_MODE: master_slave
  #   ports: 
  #     - ${POSTGRES_PORT_SLAVE}:${POSTGRES_PORT}
  #   volumes:
  #     - ./data-slave:/var/lib/postgresql/data
  #   depends_on:
  #     postgres:
  #       condition: service_healthy 
  #   networks:
  #     - mynetwork

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-backend
    command: go run cmd/main.go
    ports: 
      - :${BACKEND_PORT}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - mynetwork
  
  backend-ro-1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-backend-ro-1
    command: go run cmd/main.go
    ports: 
      - :${BACKEND_PORT}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy 
      backend:
        condition: service_started
    networks:
      - mynetwork

  backend-ro-2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: web-backend-ro-2
    command: go run cmd/main.go
    ports: 
      - :${BACKEND_PORT}
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy 
      backend:
        condition: service_started
      backend-ro-1:
        condition: service_started
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4:7
    container_name: web-pgadmin
    env_file:
      - .env
    ports: 
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy 
    networks:
      - mynetwork

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: web-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/static:/static
      - ./api.yaml:/static/api.yaml
      - ./images:/static/images
      - ./logs/nginx:/var/log/nginx
    ports:
      - ${NGINX_EXTERNAL_PORT}:${NGINX_PORT}
    depends_on:
      - backend
      - backend-ro-1
      - backend-ro-2
      - pgadmin
    networks:
      - mynetwork


networks:
  mynetwork:
    driver: bridge

# ab -n200 -c100 -H "clientId:test-client"-H "token:93e6acff-2ef9-4c85-9d0b-c9948a8ee93b" -v 2 http://127.0.0.1/oauth2/user/client/
# ab -n 200 -c 1 -H "Authorization:Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2OTg3OTE0NzYsImlkIjoxMDIsImxvZ2luIjoiZGFzaG9yaSIsInJvbGUiOiJiZWVtYW4ifQ.X6gzetnUwl691TBfKw_1Ae5P2rKZ-WPmc9LRoN4ZGCw" http://localhost:8089/api/v1/honey

# curl -X 'GET' \
#   'http://localhost:8089/api/v1/honey' \
#   -H 'accept: application/json' \
#   -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2OTg3OTE0NzYsImlkIjoxMDIsImxvZ2luIjoiZGFzaG9yaSIsInJvbGUiOiJiZWVtYW4ifQ.X6gzetnUwl691TBfKw_1Ae5P2rKZ-WPmc9LRoN4ZGCw'


# ab -n 200 -c 100 -H "Authorization:Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2OTg3OTE0NzYsImlkIjoxMDIsImxvZ2luIjoiZGFzaG9yaSIsInJvbGUiOiJiZWVtYW4ifQ.X6gzetnUwl691TBfKw_1Ae5P2rKZ-WPmc9LRoN4ZGCw" http://localhost:8089/api/v1/honey

# ab -n 200 -c 1 -H "Authorization:Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2OTg3OTE0NzYsImlkIjoxMDIsImxvZ2luIjoiZGFzaG9yaSIsInJvbGUiOiJiZWVtYW4ifQ.X6gzetnUwl691TBfKw_1Ae5P2rKZ-WPmc9LRoN4ZGCw" http://localhost:8089/api/v1/honeyab -n 200 -c 1 -H "Authorization:Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2OTg3OTE0NzYsImlkIjoxMDIsImxvZ2luIjoiZGFzaG9yaSIsInJvbGUiOiJiZWVtYW4ifQ.X6gzetnUwl691TBfKw_1Ae5P2rKZ-WPmc9LRoN4ZGCw" http://localhost:8089/api/v1/honey


# ab -n 200 -c 1  http://localhost:8089/api/v1/honey

#  ab -n 10000 -c 1 -H "Authorization:Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2OTg3OTE0NzYsImlkIjoxMDIsImxvZ2luIjoiZGFzaG9yaSIsInJvbGUiOiJiZWVtYW4ifQ.X6gzetnUwl691TBfKw_1Ae5P2rKZ-WPmc9LRoN4ZGCw" http://localhost:8089/api/v1/honey
